name: Builds

on:
  push:
    branches:
      - master
      - ci/*
      - release/*
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Build ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'windows-latest', 'macos-latest', 'ubuntu-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      # on Windows GCP Actions needs path to Python, see https://github.com/GoogleCloudPlatform/github-actions/issues/100
      - name: Setup GCP (Windows)
        uses: google-github-actions/setup-gcloud@v0
        env:
          CLOUDSDK_PYTHON: ${{env.pythonLocation}}\python.exe
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_ARTIFACTS_KEY }}
          export_default_credentials: true
        if: runner.os == 'Windows'

      - name: Setup GCP (non Windows)
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_ARTIFACTS_KEY }}
          export_default_credentials: true
        if: runner.os != 'Windows'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

        # step id used as reference for output values
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15

      - name: Show Version
        run: |
          echo "${{ steps.gitversion.outputs.FullSemVer }} (${{ steps.gitversion.outputs.ShortSha }})"

      - name: Setup App Version
        run: |
          echo '{' > packages/desktop/gitversion.json
          echo '"CommitDate":"${{ steps.gitversion.outputs.CommitDate }}",' >> packages/desktop/gitversion.json
          echo '"FullSemVer":"${{ steps.gitversion.outputs.FullSemVer }}",' >> packages/desktop/gitversion.json
          echo '"SemVer":"${{ steps.gitversion.outputs.SemVer }}",' >> packages/desktop/gitversion.json
          echo '"ShortSha":"${{ steps.gitversion.outputs.ShortSha }}"' >> packages/desktop/gitversion.json
          echo '}' >> packages/desktop/gitversion.json

      - name: Show App Version
        run: cat packages/desktop/gitversion.json

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install system libs
        run: sudo apt-get install libcurl4 libudev-dev libusb-1.0-0-dev xvfb
        if: runner.os == 'Linux'

      - name: Install Global JS components
        run: npm install -g codecov yarn

      - name: Install JS dependencies
        run: yarn install

      - name: Build
        run: yarn build:dist
        env:
          APP_VERSION_GIT_TAG: '${{ steps.gitversion.outputs.MajorMinorPatch }}-${{ steps.gitversion.outputs.CommitDate }}-${{ steps.gitversion.outputs.ShortSha }}'

      # on Windows GCP Actions needs path to Python, see https://github.com/GoogleCloudPlatform/github-actions/issues/100
      - name: Upload to GCP (Windows)
        run: |
          gsutil cp -n packages/desktop/dist/EmeraldWallet-*.exe gs://artifacts.emerald.cash/builds/emerald-wallet/v${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}.x/
        if: runner.os == 'Windows'
        env:
          CLOUDSDK_PYTHON: ${{env.pythonLocation}}\python.exe

      - name: Upload to GCP (non Windows)
        run: |
          gsutil cp -n packages/desktop/dist/EmeraldWallet-*.* gs://artifacts.emerald.cash/builds/emerald-wallet/v${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}.x/
        if: runner.os != 'Windows'

      - name: Link to published artifact
        if: runner.os == 'Windows'
        run: echo "https://artifacts.emerald.cash/builds/emerald-wallet/v${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}.x/EmeraldWallet-win-x64-${{ steps.gitversion.outputs.MajorMinorPatch }}-${{ steps.gitversion.outputs.CommitDate }}-${{ steps.gitversion.outputs.ShortSha }}.exe"

      - name: Link to published artifact
        if: runner.os == 'macOS'
        run: echo "https://artifacts.emerald.cash/builds/emerald-wallet/v${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}.x/EmeraldWallet-mac-x64-${{ steps.gitversion.outputs.MajorMinorPatch }}-${{ steps.gitversion.outputs.CommitDate }}-${{ steps.gitversion.outputs.ShortSha }}.dmg"

      - name: Link to published artifact
        if: runner.os == 'Linux'
        run: echo "https://artifacts.emerald.cash/builds/emerald-wallet/v${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}.x/EmeraldWallet-linux-amd64-${{ steps.gitversion.outputs.MajorMinorPatch }}-${{ steps.gitversion.outputs.CommitDate }}-${{ steps.gitversion.outputs.ShortSha }}.deb"

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            packages/desktop/dist/*.zip
            packages/desktop/dist/*.dmg
            packages/desktop/dist/*.exe
            packages/desktop/dist/*.deb
            packages/desktop/dist/*.tar.gz
            packages/desktop/dist/*.AppImage
