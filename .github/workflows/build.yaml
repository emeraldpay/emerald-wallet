name: Builds

on:
  # if pushed directly to the branch
  push:
    branches:
      - master
      - ci/*
      - release/*
  # on a pull request
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Build ${{ matrix.os }}
    strategy:
      matrix:
        # windows-2016 - because windows-latest comes with MSVC++ 14.25 (Visual Studio 2019 Version 16.5), which is
        # incompatible with librocksdb-sys v5.18.3
        os: ["windows-2016", "macos-latest", "ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup caches for Yarn
        uses: c-hive/gha-yarn-cache@v1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      # on windows GCP Actions needs path to Python, see https://github.com/GoogleCloudPlatform/github-actions/issues/100
      - name: Setup GCP (windows)
        uses: google-github-actions/setup-gcloud@v0
        env:
          CLOUDSDK_PYTHON: ${{env.pythonLocation}}\python.exe
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
        if: runner.os == 'Windows'

      - name: Setup GCP (non windows)
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
        if: runner.os != 'Windows'

        # needed for GitVersion
      - name: Fetch all history
        run: git fetch --prune --unshallow

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.x'

        # step id used as reference for output values
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9

      - name: Show Version
        run: |
          echo "${{ steps.gitversion.outputs.fullSemVer }}-${{ steps.gitversion.outputs.shortSha }}"

      - name: Setup App Version
        run: |
          echo '{' > packages/desktop/gitversion.json
          echo '"BuildMetaDataPadded":"0001",' >> packages/desktop/gitversion.json
          echo '"SemVer":"${{ steps.gitversion.outputs.semVer }}",' >> packages/desktop/gitversion.json
          echo '"FullSemVer":"${{ steps.gitversion.outputs.fullSemVer }}",' >> packages/desktop/gitversion.json
          echo '"ShortSha":"${{ steps.gitversion.outputs.shortSha }}",' >> packages/desktop/gitversion.json
          echo '"CommitDate":"${{ steps.gitversion.outputs.commitDate }}"' >> packages/desktop/gitversion.json
          echo '}' >> packages/desktop/gitversion.json

      - name: Show App Version
        run: cat packages/desktop/gitversion.json

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install LLVM
        run: choco install -y llvm
        if: runner.os == 'Windows'

      - name: Install system libs
        run: sudo apt-get install libusb-1.0-0-dev libcurl4 xvfb
        if: runner.os == 'Linux'

      - name: Install Global JS components
        run: npm install -g node-gyp codecov yarn lerna typescript

      - name: Install JS dependencies
        run: yarn install --network-timeout 1000000

      - name: Build
        run: yarn build:dist
        env:
          APP_VERSION_GIT_TAG: "${{ steps.gitversion.outputs.majorMinorPatch }}-${{ steps.gitversion.outputs.commitDate }}-${{ steps.gitversion.outputs.shortSha }}"

      # on windows GCP Actions needs path to Python, see https://github.com/GoogleCloudPlatform/github-actions/issues/100
      - name: Upload to GCP (windows)
        run: |
          gsutil cp -n packages/desktop/dist/EmeraldWallet-*.exe gs://builds.etcdevteam.com/emerald-wallet/v${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}.x/
        if: runner.os == 'Windows'
        env:
          CLOUDSDK_PYTHON: ${{env.pythonLocation}}\python.exe

      - name: Upload to GCP (non windows)
        run: |
          gsutil cp -n packages/desktop/dist/EmeraldWallet-*.* gs://builds.etcdevteam.com/emerald-wallet/v${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}.x/
        if: runner.os != 'Windows'

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            packages/desktop/dist/*.zip
            packages/desktop/dist/*.dmg
            packages/desktop/dist/*.exe
            packages/desktop/dist/*.deb
            packages/desktop/dist/*.tar.gz
            packages/desktop/dist/*.AppImage